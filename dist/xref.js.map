{"version":3,"file":"xref.js","sources":["../src/prefetch.ts","../src/utils.ts","../src/partials.ts","../src/xref.ts"],"sourcesContent":["import { XrefOptions } from \"./xref\";\n\ninterface PrefetchOptions {\n  event?: string;\n  delay?: number;\n  selector?: string;\n  active?: boolean;\n}\n\nexport class Prefetcher {\n  private cache: Map<string, string> = new Map();\n  private options: PrefetchOptions;\n  private xrefOptions: XrefOptions;\n\n  /**\n   *\n   * @description Initializes the prefetcher\n   * with the given options.\n   */\n  constructor(options: PrefetchOptions, xrefOptions: XrefOptions) {\n    this.options = options;\n    this.xrefOptions = xrefOptions;\n    this.init();\n  }\n\n  /**\n   * @description Initializes the prefetcher by\n   * adding an event listener to the document.\n   */\n  private init() {\n    if (!this.options.active) return;\n    document.addEventListener(this.options.event || \"mouseover\", this.handleEvent.bind(this));\n  }\n\n  /**\n   *\n   * @description Handles the event by checking if the target\n   * is an anchor element and if it should be prefetched.\n   */\n  private handleEvent(event: Event) {\n    const target = event.target as HTMLElement;\n    const link = target.closest(this.options.selector || \"a\") as HTMLAnchorElement | null;\n\n    if (link && this.shouldPrefetch(link)) {\n      setTimeout(() => this.prefetch(link.href), this.options.delay || 100);\n    }\n  }\n\n  /**\n   *\n   * @description Checks if the link should be prefetched.\n   * It should be prefetched if it's an anchor element, it's\n   * not the current page, and it's not already in the cache.\n   */\n  private shouldPrefetch(link: HTMLAnchorElement): boolean {\n    return !!(link.href && link.href.startsWith(window.location.origin) && link.href !== window.location.href && !this.cache.has(link.href));\n  }\n\n  /**\n   *\n   * @description Fetches the content of the given URL\n   * and stores it in the cache. If the fetch fails, it logs\n   * an error to the console.\n   */\n  private async prefetch(url: string) {\n    try {\n      const response = await fetch(url);\n      const text = await response.text();\n      this.cache.set(url, text);\n      this.xrefOptions.debug ? console.log(`Prefetched: ${url}`) : null;\n    } catch (error) {\n      this.xrefOptions.debug ? console.error(\"Failed to prefetch:\" + url, error) : null;\n    }\n  }\n\n  /**\n   *\n   * @description Gets the content of the given URL\n   * from the cache. If the content is not in the cache,\n   * it returns null. Otherwise, it returns the content.\n   * This method is used by the Xref instance to get the\n   * content of a URL before navigating to it.\n   */\n  public getContent(url: string): string | null {\n    return this.cache.get(url) || null;\n  }\n}\n\nexport function initPrefetcher(options: PrefetchOptions, xrefOptions: XrefOptions): Prefetcher {\n  return new Prefetcher(options, xrefOptions);\n}\n","/**\n * @description Convert camelCase to kebab-case\n */\nexport function camelToKebab(str: string): string {\n  return str.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\n\n/**\n * @description Convert kebab-case to camelCase\n */\nexport function kebabToCamel(str:string): string {\n  return str.replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n}\n","import { XrefOptions, TransitionOptions, TransitionState, PartialTransition } from \"./xref\";\nimport { camelToKebab } from \"./utils\";\n\n/**\n * \n * @description Handle partial transitions for a given element \n */\nexport async function handlePartials(partials: PartialTransition[], oldElement: HTMLElement, newElement: HTMLElement, options: XrefOptions, direction: \"in\" | \"out\") {\n  options.debug ? console.log(`Handling partials for ${direction} transition`) : null;\n\n  const partialPromises = partials.flatMap((partial, index) => {\n    const elements = oldElement.querySelectorAll(partial.element);\n    options.debug ? console.log(`Found ${elements.length} elements matching selector: ${partial.element}`) : null;\n\n    return Array.from(elements).map((element) => {\n      const mergedOptions = mergeOptions(partial, options.transition, index);\n      let transitionState = direction === \"out\" ? partial.out : partial.in;\n\n      // If the transition for the current direction is not defined, reverse the other direction\n      if (!transitionState) {\n        const oppositeTransition = direction === \"out\" ? partial.in : partial.out;\n        if (oppositeTransition) {\n          transitionState = reverseTransition(oppositeTransition);\n        }\n      }\n\n      if (transitionState) {\n        if (direction === \"in\") {\n          element.style.removeProperty(\"visibility\");\n        }\n        return applyPartialTransition(element as HTMLElement, transitionState, mergedOptions, direction);\n      }\n      return Promise.resolve();\n    });\n  });\n\n  await Promise.all(partialPromises);\n}\n\n/**\n * \n * @description Merge partial transition options with global transition options\n */\nfunction mergeOptions(partial: PartialTransition, globalTransition: TransitionOptions | undefined, index: number): TransitionOptions {\n  const globalPartial = globalTransition?.partials?.[index] || {};\n  return {\n    ...globalTransition,\n    ...globalPartial,\n    duration: partial.duration ?? globalTransition?.duration,\n    delay: partial.delay ?? globalTransition?.delay,\n    easing: partial.easing ?? globalTransition?.easing,\n  };\n}\n\n/**\n * \n * @description Reverse the transition state\n */\nfunction reverseTransition(transition: TransitionState): TransitionState {\n  return {\n    from: transition.to,\n    to: transition.from,\n  };\n}\n\n/**\n * \n * @description Hide partial elements\n */\nexport function hidePartials(partials: PartialTransition[], element: HTMLElement) {\n  partials.forEach((partial) => {\n    const elements = element.querySelectorAll(partial.element);\n    elements.forEach((el: HTMLElement | any) => {\n      el.style.visibility = \"hidden\";\n    });\n  });\n}\n\n/**\n * \n * @description Show partial elements\n */\nexport function showPartials(partials: PartialTransition[], element: HTMLElement) {\n  partials.forEach((partial) => {\n    const elements = element.querySelectorAll(partial.element);\n    elements.forEach((el: HTMLElement | any) => {\n      el.style.visibility = \"visible\";\n    });\n  });\n}\n\n/**\n * @description Apply partial transition to an element\n * */\nasync function applyPartialTransition(element: HTMLElement, transitionState: TransitionState, options: TransitionOptions, direction: \"in\" | \"out\"): Promise<void> {\n  return new Promise((resolve) => {\n    const duration = options.duration || 300;\n    const delay = options.delay ?? 0;\n    const easing = options.easing || \"ease-in-out\";\n\n    const keyframeName = createKeyframes(transitionState, direction);\n    const animationCSS = `${keyframeName} ${duration}ms ${easing} ${delay}ms forwards`;\n\n    element.style.setProperty(\"animation\", animationCSS);\n    console.log(`Applied ${direction} animation to partial: ${animationCSS}`);\n    console.log(\"Current partial element style:\", element.style.cssText);\n\n    // Force a reflow to ensure the animation is applied immediately\n    void element.offsetWidth;\n\n    const cleanup = () => {\n      console.log(`Animation end event fired for ${direction} transition on partial: ${element.tagName}`);\n      element.style.removeProperty(\"animation\");\n\n      // Remove the keyframe immediately after the animation is complete\n      removeKeyframes(keyframeName);\n\n      if (direction === \"in\") {\n        Object.entries(transitionState.to || {}).forEach(([key, value]) => {\n          element.style.setProperty(camelToKebab(key), value as string);\n        });\n      }\n      console.log(`Cleaned up ${direction} animation for partial: ${element.tagName}`);\n      console.log(\"Current partial element style after cleanup:\", element.style.cssText);\n\n      resolve();\n    };\n\n    element.addEventListener(\"animationend\", cleanup, { once: true });\n  });\n}\n\nfunction createKeyframes(transitionState: TransitionState, direction: \"in\" | \"out\"): string {\n  const { from, to } = transitionState;\n  let randomId = Math.random().toString(36).substr(2, 9);\n  const keyframeName = `xref-partial-${direction}-${randomId}`;\n\n  const keyframeCSS = `@keyframes ${keyframeName} {\n    from {\n      ${Object.entries(from || {})\n        .map(([key, value]) => `${camelToKebab(key)}: ${value};`)\n        .join(\" \")}\n    }\n    to {\n      ${Object.entries(to || {})\n        .map(([key, value]) => `${camelToKebab(key)}: ${value};`)\n        .join(\" \")}\n    }\n  }`;\n\n  const styleElement = document.createElement(\"style\");\n  styleElement.textContent = keyframeCSS;\n  styleElement.setAttribute(keyframeName, '');\n  document.head.appendChild(styleElement);\n\n  return keyframeName;\n}\n\nfunction removeKeyframes(keyframeName: string) {\n  // this is bad implementation, remove by keyframeName not :last-of-type selector\n  // const styleElement = document.querySelector(`style:not([data-xref=\"true\"]):last-of-type`);\n\n  const styleElement = document.querySelector(`style[${keyframeName}]`);\n  if (styleElement) {\n    styleElement.remove();\n  }\n}\n","import { Prefetcher, initPrefetcher } from \"./prefetch\";\nimport { handlePartials, hidePartials, showPartials } from \"./partials\";\nimport { camelToKebab } from \"./utils\";\n\nexport interface XrefOptions {\n  debug?: boolean;\n  updateHead?: boolean;\n  transition?: TransitionOptions;\n  prefetch?: PrefetchOptions;\n  head?: HeadOptions;\n}\n\nexport interface HeadOptions {\n  update?: boolean;\n  retrigger?: {\n    css?: boolean;\n    js?: boolean;\n    include?: string | RegExp;\n    exclude?: string | RegExp;\n  };\n}\nexport interface PrefetchOptions {\n  active: boolean;\n  delay: number;\n  event: string;\n  selector?: string;\n}\n\nexport interface TransitionOptions {\n  duration?: number;\n  delay?: number;\n  easing?: string;\n  timeline?: \"sequential\" | \"parallel\";\n  in?: TransitionState;\n  out?: TransitionState;\n  callback?: TransitionCallbacks;\n  state?: AnimationState;\n  swapHtml?: string;\n  partials?: PartialTransition[];\n}\n\nexport interface PartialTransition {\n  element: string;\n  duration?: number;\n  delay?: number;\n  easing?: string;\n  in?: TransitionState;\n  out?: TransitionState;\n}\n\nexport interface TransitionState {\n  from?: Record<string, string | number>;\n  to?: Record<string, string | number>;\n}\n\nexport interface AnimationState {\n  started: boolean;\n  playing: boolean;\n  paused: boolean;\n  finished: boolean;\n}\n\nexport interface TransitionCallbacks {\n  onEnter?: () => void;\n  onStart?: () => void;\n  onPlay?: () => void;\n  onPause?: () => void;\n  onFinish?: () => void;\n}\n\n/**\n * The main Xref class that handles\n * navigation and transitions.\n *\n * @returns The Xref instance.\n *\n * @description This is the main class that handles navigation and transitions.\n * It intercepts clicks on internal links, fetches the content of the linked page,\n * updates the document head and body, and performs transitions between the\n * old and new content. It also handles popstate events to support back\n * and forward navigation.\n */\nclass Xref {\n  private options: XrefOptions;\n  private styleElement: HTMLStyleElement;\n  private transitionCounter: number = 0;\n  private prefetcher: Prefetcher | null = null;\n  private animationState: AnimationState;\n\n  /**\n   * @description This is the constructor of the Xref class.\n   * It initializes the Xref instance with the given options,\n   * creates a style element to store the keyframes for transitions,\n   * and sets the initial animation state.\n   */\n  constructor(options: XrefOptions = {}) {\n    this.options = {\n      updateHead: true,\n      ...options,\n    };\n    this.styleElement = document.createElement(\"style\");\n    this.styleElement.setAttribute(\"data-xref\", \"true\");\n    document.head.appendChild(this.styleElement);\n    this.animationState = {\n      started: false,\n      playing: true,\n      paused: false,\n      finished: false,\n      ...(this.options.transition?.state as Partial<AnimationState>),\n    };\n    this.init();\n  }\n\n  /**\n   * @description This method initializes the Xref instance\n   * by intercepting clicks on internal links, handling popstate events,\n   * and initializing the prefetcher if prefetching is enabled.\n   */\n  private init() {\n    this.options.debug ? console.log(\"started -> init() Method\") : null;\n\n    this.interceptClicks();\n    this.handlePopState();\n\n    if (this.options.prefetch && this.options.prefetch.active) {\n      this.prefetcher = initPrefetcher(this.options.prefetch, this.options);\n    }\n  }\n\n  private currentKeyframeName: string | null = null;\n\n  /**\n   * @description This method creates keyframes\n   * for the given transition state\n   * and direction.\n   */\n  private createKeyframes(transitionState: TransitionState, direction: \"in\" | \"out\"): string {\n    const { from, to } = transitionState;\n    const keyframeName = `xref-${direction}-${++this.transitionCounter}`;\n\n    let keyframeCSS = `@keyframes ${keyframeName} {\n      from {\n        ${Object.entries(from || {})\n          .map(([key, value]) => `${camelToKebab(key)}: ${value};`)\n          .join(\" \")}\n      }\n      to {\n        ${Object.entries(to || {})\n          .map(([key, value]) => `${camelToKebab(key)}: ${value};`)\n          .join(\" \")}\n      }\n    }`;\n\n    this.options.debug ? console.log(\"Creating keyframe:\" + keyframeName) : null;\n    this.options.debug ? console.log(\"Keyframe CSS:\" + keyframeCSS) : null;\n\n    // Remove the previous keyframe if it exists\n    if (this.currentKeyframeName) {\n      this.removeKeyframes(this.currentKeyframeName);\n    }\n\n    // Append the new keyframe to the style element's content\n    this.styleElement.textContent = keyframeCSS;\n    this.currentKeyframeName = keyframeName;\n\n    this.options.debug ? console.log(\"Keyframe \" + keyframeName + \"appended to <style> element\") : null;\n    this.options.debug ? console.log(\"Current <style> content: \" + this.styleElement.textContent) : null;\n\n    return keyframeName;\n  }\n\n  /**\n   * @param keyframeName\n   * @description This method removes the keyframes\n   * with the given name from the style element.\n   */\n  private removeKeyframes(keyframeName: string) {\n    this.options.debug ? console.log(\"Removing keyframe: \" + keyframeName) : null;\n    this.styleElement.textContent = \"\";\n    this.options.debug ? console.log(\"Keyframe\" + keyframeName + \"removed\") : null;\n    this.options.debug ? console.log(\"Current <style> content after removal:\" + this.styleElement.textContent) : null;\n    this.currentKeyframeName = null;\n  }\n\n  /**\n   * @description This method intercepts clicks\n   * on internal links and prevents the default\n   * browser navigation behavior.\n   */\n  private interceptClicks() {\n    this.options.debug ? console.log(\"started -> interceptClicks() Method\") : null;\n\n    document.addEventListener(\"click\", (event) => {\n      const target = event.target as HTMLElement;\n      const anchor = target.closest(\"a\");\n      if (anchor && this.shouldIntercept(anchor as HTMLAnchorElement)) {\n        event.preventDefault();\n        this.runCallback(\"onEnter\");\n        this.navigate(anchor.href);\n      }\n    });\n  }\n\n  /**\n   * @description This method checks if the\n   * anchor should be intercepted based on\n   * the current URL and the anchor's href.\n   */\n  private shouldIntercept(anchor: HTMLAnchorElement): boolean {\n    this.options.debug ? console.log(\"started -> shouldIntercept() Method\") : null;\n\n    const currentUrl = new URL(window.location.href);\n    const linkUrl = new URL(anchor.href);\n\n    // Check if it's an internal link\n    const isSameOrigin = linkUrl.origin === currentUrl.origin;\n\n    // Check if it's not the current page or just a hash change\n    const isSamePage = linkUrl.pathname === currentUrl.pathname && linkUrl.search === currentUrl.search;\n    const isJustHashChange = isSamePage && linkUrl.hash !== currentUrl.hash;\n\n    // Intercept only if it's an internal link and not the same page or just a hash change\n    return isSameOrigin && !isSamePage && !isJustHashChange;\n  }\n\n  /**\n   * @description This method handles popstate events\n   * to support back and forward navigation.\n   */\n  private handlePopState() {\n    this.options.debug ? console.log(\"started -> handlePopState() Method\") : null;\n\n    window.addEventListener(\"popstate\", () => {\n      this.navigate(window.location.href, false);\n    });\n  }\n\n  /**\n   * @description This method navigates to the given URL\n   * and updates the page content. If prefetching is enabled\n   * and the content is already prefetched, it uses the\n   * prefetched content instead of fetching it again.\n   * If pushState is true, it updates the browser history.\n   */\n  public async navigate(url: string, pushState: boolean = true) {\n    this.options.debug ? console.log(\"started -> navigate() Method\") : null;\n\n    try {\n      let content: string | null = null;\n      if (this.prefetcher) {\n        content = this.prefetcher.getContent(url);\n      }\n\n      if (!content) {\n        content = await this.fetchPage(url);\n      }\n\n      if (content) {\n        if (pushState) {\n          history.pushState(null, \"\", url);\n        }\n        this.updatePage(content);\n      }\n    } catch (error) {\n      this.options.debug ? console.error(\"Navigation failed:\", error) : null;\n    }\n  }\n\n  /**\n   * @description This method fetches the content of the given URL\n   * and returns it as a string. It throws an error if the request fails.\n   */\n  private async fetchPage(url: string): Promise<string> {\n    this.options.debug ? console.log(\"started -> fetchPage() Method\") : null;\n\n    const response = await fetch(url);\n    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n    return await response.text();\n  }\n\n  /**\n   * @description This method updates the page content\n   * with the new content fetched from the server.\n   * It updates the head and body of the document\n   * based on the new content.\n   */\n  private async updatePage(content: string) {\n    this.options.debug ? console.log(\"started -> updatePage() Method\") : null;\n\n    const parser = new DOMParser();\n    const newDoc = parser.parseFromString(content, \"text/html\");\n\n    await this.updateBody(newDoc);\n    this.updateHead(newDoc);\n  }\n\n  /**\n   * @description This method updates the head of the document\n   * with the new head from the fetched content. It updates\n   * the title and other head elements based on the new content.\n   */\n  private updateHead(newDoc: Document) {\n    this.options.debug ? console.log(\"started -> updateHead() Method\") : null;\n\n    const oldHead = document.head;\n    const newHead = newDoc.head;\n\n    // Always update the title\n    document.title = newDoc.title;\n\n    if (this.options.head?.update === false) {\n      return;\n    }\n\n    // Remove old elements except our style element and title\n    Array.from(oldHead.children).forEach((child) => {\n      if (child !== this.styleElement && child.tagName !== \"TITLE\") {\n        child.remove();\n      }\n    });\n\n    // Add new elements\n    Array.from(newHead.children).forEach((child) => {\n      if (child.tagName !== \"STYLE\" && child.tagName !== \"TITLE\") {\n        const newChild = child.cloneNode(true) as HTMLElement;\n        oldHead.appendChild(newChild);\n        this.retriggerElement(newChild);\n      }\n    });\n\n    this.options.debug ? console.log(\"Head updated, xref style element preserved\") : null;\n  }\n\n  private retriggerElement(element: HTMLElement) {\n    const { retrigger } = this.options.head || {};\n    if (!retrigger) return;\n\n    const shouldRetrigger = (el: HTMLElement): boolean => {\n      if (retrigger.include && !el.matches(retrigger.include.toString())) return false;\n      if (retrigger.exclude && el.matches(retrigger.exclude.toString())) return false;\n      return true;\n    };\n\n    if (element.tagName === \"LINK\" && retrigger.css && shouldRetrigger(element)) {\n      const link = element as HTMLLinkElement;\n      link.href = link.href.split(\"?\")[0] + \"?t=\" + new Date().getTime();\n    } else if (element.tagName === \"SCRIPT\" && retrigger.js && shouldRetrigger(element)) {\n      const script = element as HTMLScriptElement;\n      const newScript = document.createElement(\"script\");\n      Array.from(script.attributes).forEach((attr) => newScript.setAttribute(attr.name, attr.value));\n      newScript.textContent = script.textContent;\n      script.parentNode?.replaceChild(newScript, script);\n    }\n  }\n\n  /**\n   * @description This method updates the body of the document\n   * with the new body from the fetched content. It updates\n   * the content of the swapHtml element based on the new content.\n   * It also performs the transition between the old and new content.\n   */\n  private async updateBody(newDoc: Document) {\n    this.options.debug ? console.log(\"started -> updateBody() Method\") : null;\n\n    const swapHtml = this.options.transition?.swapHtml || \"body\";\n    const oldElement = document.querySelector(swapHtml);\n    const newElement = newDoc.querySelector(swapHtml);\n\n    if (!oldElement || !newElement) {\n      this.options.debug ? console.error(`Element not found: ${swapHtml}`) : null;\n      return;\n    }\n\n    await this.performTransition(oldElement as HTMLElement, newElement as HTMLElement);\n\n    window.scrollTo(0, 0);\n  }\n\n  /**\n   * @description This method performs the transition\n   * between the old and new content by applying the\n   * in and out transitions to the elements.\n   * It also handles the transition timeline, duration,\n   * delay, and easing.\n   */\n  private async performTransition(oldElement: HTMLElement, newElement: HTMLElement) {\n    this.options.debug ? console.log(\"Started performTransition\") : null;\n    const transitionOptions = this.options.transition || {};\n    const duration = transitionOptions.duration || 300;\n    const delay = transitionOptions.delay || 0;\n    const easing = transitionOptions.easing || \"ease-in-out\";\n\n    let outTransition = transitionOptions.out;\n    let inTransition = transitionOptions.in;\n\n    this.setTransitionState(\"started\", true);\n    this.runCallback(\"onStart\");\n\n    // Get partials outside swapHtml\n    const partialsOutsideSwapHtml = this.getPartialsOutsideSwapHtml();\n\n    // 1. Animate partials \"out\"\n    if (partialsOutsideSwapHtml.length > 0) {\n      this.options.debug ? console.log(\"Applying partial out transitions\") : null;\n      const partialsOutPromise = handlePartials(partialsOutsideSwapHtml, document.body, document.body, this.options, \"out\");\n\n      // Wait for the longest partial out animation to complete\n      await partialsOutPromise;\n\n      // Hide partials after out animations\n      hidePartials(partialsOutsideSwapHtml, document.body);\n    }\n\n    // 2. Animate swapHtml out\n    if (outTransition) {\n      this.options.debug ? console.log(\"Applying main out transition\") : null;\n      await this.applyTransition(oldElement, outTransition, duration, delay, easing, \"out\");\n    }\n\n    // Update content of swapHtml\n    oldElement.innerHTML = newElement.innerHTML;\n    Array.from(newElement.attributes).forEach((attr) => {\n      if (attr.name !== \"style\") {\n        oldElement.setAttribute(attr.name, attr.value);\n      }\n    });\n\n    // 3. Animate swapHtml in\n    if (inTransition) {\n      this.options.debug ? console.log(\"Applying main in transition\") : null;\n      await this.applyTransition(oldElement, inTransition, duration, delay, easing, \"in\");\n    }\n\n    // 4. Animate partials \"in\"\n    if (partialsOutsideSwapHtml.length > 0) {\n      hidePartials(partialsOutsideSwapHtml, document.body);\n      await handlePartials(partialsOutsideSwapHtml, document.body, document.body, this.options, \"in\");\n    }\n\n    // 5. Partials visible and DOM is ready with new Page\n    this.setTransitionState(\"finished\", true);\n    this.runCallback(\"onFinish\");\n\n    window.scrollTo(0, 0);\n  }\n\n  private getPartialsOutsideSwapHtml(): PartialTransition[] {\n    const swapHtml = this.options.transition?.swapHtml || \"body\";\n    const swapHtmlElement = document.querySelector(swapHtml);\n\n    return (this.options.transition?.partials || []).filter((partial) => {\n      const elements = document.querySelectorAll(partial.element);\n      return Array.from(elements).every((el) => !swapHtmlElement?.contains(el));\n    });\n  }\n\n  /**\n   * @description This method reverses the given transition\n   * by swapping the from and to states. This is useful\n   * for creating the \"out\" transition from the \"in\" transition.\n   */\n  private reverseTransition(transition: TransitionState): TransitionState {\n    return {\n      from: transition.to,\n      to: transition.from,\n    };\n  }\n\n  /**\n   * @description This method applies the transition to the element\n   * by creating the keyframes, setting the animation properties,\n   * and cleaning up after the animation is complete.\n   */\n  private applyTransition(element: HTMLElement, transitionState: TransitionState, duration: number, delay: number, easing: string, direction: \"in\" | \"out\"): Promise<void> {\n    return new Promise((resolve) => {\n      this.options.debug ? console.log(`Applying ${direction} transition`) : null;\n      const keyframeName = this.createKeyframes(transitionState, direction);\n      const animationCSS = `${keyframeName} ${duration}ms ${easing} ${delay}ms forwards`;\n\n      element.style.setProperty(\"animation\", animationCSS);\n      this.options.debug ? console.log(`Applied ${direction} animation: ${animationCSS}`) : null;\n      this.options.debug ? console.log(\"Current element style:\", element.style.cssText) : null;\n\n      // Force a reflow to ensure the animation is applied immediately\n      void element.offsetWidth;\n\n      const cleanup = () => {\n        this.options.debug ? console.log(`Animation end event fired for ${direction} transition`) : null;\n        element.style.removeProperty(\"animation\");\n\n        // Remove the keyframe immediately after the animation is complete\n        this.removeKeyframes(keyframeName);\n\n        if (direction === \"in\") {\n          Object.entries(transitionState.to || {}).forEach(([key, value]) => {\n            element.style.setProperty(camelToKebab(key), value as string);\n          });\n        }\n        this.options.debug ? console.log(`Cleaned up ${direction} animation`) : null;\n        this.options.debug ? console.log(\"Current element style after cleanup:\", element.style.cssText) : null;\n\n        resolve();\n      };\n\n      element.addEventListener(\"animationend\", cleanup, { once: true });\n    });\n  }\n\n  /**\n   * @description This method sets the transition state\n   * based on the given key and value. This is useful\n   * for tracking the state of the transition.\n   */\n  private setTransitionState(key: keyof AnimationState, value: boolean) {\n    this.animationState[key] = value;\n  }\n\n  /**\n   * \n   * @description This method runs the callback with the given name\n   * if it exists in the transition options. This is useful for\n   * running custom code at different stages of the transition.\n   */\n  private runCallback(callbackName: keyof TransitionCallbacks) {\n    const callback = this.options.transition?.callback?.[callbackName];\n    if (callback && typeof callback === \"function\") {\n      callback();\n    }\n  }\n\n  /**\n   * @description This method starts the transition\n   * and sets the animation state accordingly.\n   */\n  public startTransition() {\n    this.setTransitionState(\"started\", true);\n    this.setTransitionState(\"playing\", true);\n    this.setTransitionState(\"paused\", false);\n    this.setTransitionState(\"finished\", false);\n    this.runCallback(\"onStart\");\n    this.runCallback(\"onPlay\");\n  }\n\n  /**\n   * @description This method pauses the transition\n   * and sets the animation state accordingly.\n   */\n  public pauseTransition() {\n    if (this.animationState.playing) {\n      this.setTransitionState(\"playing\", false);\n      this.setTransitionState(\"paused\", true);\n      this.runCallback(\"onPause\");\n\n      // Pause transition\n      const element = document.querySelector(this.options.transition?.swapHtml || \"body\");\n      if (element instanceof HTMLElement) {\n        element.style.animationPlayState = \"paused\";\n      }\n    }\n  }\n\n  /**\n   * @description This method resumes the transition\n   * and sets the animation state accordingly.\n   */\n  public resumeTransition() {\n    if (this.animationState.paused) {\n      this.setTransitionState(\"playing\", true);\n      this.setTransitionState(\"paused\", false);\n      this.runCallback(\"onPlay\");\n\n      // Play transition\n      const element = document.querySelector(this.options.transition?.swapHtml || \"body\");\n      if (element instanceof HTMLElement) {\n        element.style.animationPlayState = \"running\";\n      }\n    }\n  }\n\n  /**\n   * @description This method finishes the transition\n   * and cleans up the animation\n   * */\n  public finishTransition() {\n    this.setTransitionState(\"playing\", false);\n    this.setTransitionState(\"paused\", false);\n    this.setTransitionState(\"finished\", true);\n    this.runCallback(\"onFinish\");\n  }\n}\n\n/**\n * @description This function creates a new Xref instance\n * with the given options and returns it. This is the main\n * entry point for using Xref in a project.\n */\nfunction xref(options: XrefOptions = {}): Xref {\n  return new Xref(options);\n}\n\nexport default xref;\n"],"names":[],"mappings":"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"}