(function(n,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(n="undefined"!=typeof globalThis?globalThis:n||self,n.xref=t())})(this,function(){"use strict";function n(n){document.addEventListener("click",n=>{const e=n.target,o=e.closest("a");if(o&&t(o)){n.preventDefault();const t=window.xref;"function"==typeof(null==t?void 0:t.navigateTo)&&t.navigateTo(o.href)}})}function t(n){return n.href.startsWith(window.location.origin)}function e(n,t){const e="string"==typeof n?document.querySelectorAll(n):n,{duration:i,delay:r,easing:a,in:d,out:u,timeline:l="sequential"}=t,f=o(e,{duration:i,delay:r,easing:a,in:d,out:u,timeline:l});s(f),document.addEventListener("startViewTransition",()=>{s(f)}),document.addEventListener("finishViewTransition",()=>{c()})}function o(n,t){const{duration:e,delay:o,easing:r,in:a,out:s}=t;let c="";return n.forEach((n,t)=>{const d=`xref-animated-${t}`;n.id=d;const u=i(a,"in"),l=i(s,"out");c+=`\n      @keyframes ${u.name} {\n        ${u.rules}\n      }\n      @keyframes ${l.name} {\n        ${l.rules}\n      }\n      #${d} {\n        animation: ${e}ms ${o}ms ${r} both var(--xref-animation-name, none);\n      }\n      #${d}::view-transition-new {\n        animation: ${e}ms ${o}ms ${r} both ${u.name};\n      }\n      #${d}::view-transition-old {\n        animation: ${e}ms ${o}ms ${r} both ${l.name};\n      }\n    `}),c}function i(n,t){const e=`xref-${t}-${Math.random().toString(36).substr(2,9)}`,o=(null==n?void 0:n.from)?r(n.from):"",i=(null==n?void 0:n.to)?r(n.to):"",a=`\n    from { ${o} }\n    to { ${i} }\n  `;return{name:e,rules:a}}function r(n){return Object.entries(n).map(([n,t])=>`${a(n)}: ${t};`).join(" ")}function a(n){return n.replace(/[A-Z]/g,n=>`-${n.toLowerCase()}`)}function s(n){c();const t=document.createElement("style");t.textContent=n,document.head.appendChild(t)}function c(){const n=document.querySelector("style[data-xref]");n&&n.remove()}function d(n){document.addEventListener(n.event,t=>{const e=t.target,o=e.closest("a");o&&u(o)&&setTimeout(()=>l(o.href),n.delay)})}function u(n){return n.href.startsWith(window.location.origin)}async function l(n){try{const t=await fetch(n,{method:"GET"}),e=await t.text(),o=new DOMParser;o.parseFromString(e,"text/html"),console.log(`Prefetched: ${n}`)}catch(t){console.error(`Failed to prefetch ${n}:`,t)}}function f(t={}){var e;if(!f.isSupported)return void console.warn("View Transitions API is not supported in this browser. Xref will not apply transitions.");const o=Object.assign(Object.assign({},f.defaultOptions),t);n(),(null===(e=o.prefetch)||void 0===e?void 0:e.isActive)&&d(o.prefetch),m()}function m(){window.addEventListener("popstate",()=>{const n=window.location.href;f.navigateTo(n,!0)})}const p={swapHtml:"body",prefetch:{isActive:!1,event:"mouseover",delay:0},transition:{duration:300,delay:0,easing:"ease",timeline:"sequential"}};return f.navigateTo=((n,t=!1)=>{t||history.pushState(null,"",n);const e=document.startViewTransition;"function"==typeof e?e(()=>fetch(n).then(n=>n.text()).then(n=>{const t=new DOMParser,e=t.parseFromString(n,"text/html");document.head.innerHTML=e.head.innerHTML;const o=document.querySelector(f.defaultOptions.swapHtml||"body"),i=e.querySelector(f.defaultOptions.swapHtml||"body");o&&i&&(o.innerHTML=i.innerHTML),window.scrollTo(0,0)})):window.location.href=n}),f.version="0.0.1",f.defaultOptions=p,f.isSupported="undefined"!=typeof document&&"startViewTransition"in document,f.animate=e,f});