!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).Xref=t()}(this,(function(){"use strict";class e{constructor(e={}){this.transitionCounter=0,this.currentKeyframeName=null,this.options=Object.assign({updateHead:!0},e),this.styleElement=document.createElement("style"),this.styleElement.setAttribute("data-xref","true"),document.head.appendChild(this.styleElement),this.init()}init(){console.log("started -> init() Method"),this.interceptClicks(),this.handlePopState()}createKeyframes(e,t){const{from:o,to:n}=e,s=`xref-${t}-${++this.transitionCounter}`;let r=`@keyframes ${s} {\n      from {\n        ${Object.entries(o||{}).map((([e,t])=>`${this.camelToKebab(e)}: ${t};`)).join(" ")}\n      }\n      to {\n        ${Object.entries(n||{}).map((([e,t])=>`${this.camelToKebab(e)}: ${t};`)).join(" ")}\n      }\n    }`;return console.log("Creating keyframe:"+s),console.log("Keyframe CSS:"+r),this.currentKeyframeName&&this.removeKeyframes(this.currentKeyframeName),this.styleElement.textContent=r,this.currentKeyframeName=s,console.log("Keyframe "+s+"appended to <style> element"),console.log("Current <style> content: "+this.styleElement.textContent),s}removeKeyframes(e){console.log("Removing keyframe: "+e),this.styleElement.textContent="",console.log("Keyframe"+e+"removed"),console.log("Current <style> content after removal:"+this.styleElement.textContent),this.currentKeyframeName=null}interceptClicks(){console.log("started -> interceptClicks() Method"),document.addEventListener("click",(e=>{const t=e.target.closest("a");t&&this.shouldIntercept(t)&&(e.preventDefault(),this.navigate(t.href))}))}shouldIntercept(e){console.log("started -> shouldIntercept() Method");const t=e.origin===window.location.origin,o=""===e.hash;return t&&o}handlePopState(){console.log("started -> handlePopState() Method"),window.addEventListener("popstate",(()=>{this.navigate(window.location.href,!1)}))}async navigate(e,t=!0){console.log("started -> navigate() Method");try{const o=await this.fetchPage(e);o&&(t&&history.pushState(null,"",e),this.updatePage(o))}catch(e){console.error("Navigation failed:",e)}}async fetchPage(e){console.log("started -> fetchPage() Method");const t=await fetch(e);if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return await t.text()}updatePage(e){console.log("started -> updatePage() Method");const t=(new DOMParser).parseFromString(e,"text/html");this.updateHead(t),this.updateBody(t)}updateHead(e){console.log("started -> updateHead() Method");const t=document.head,o=e.head;document.title=e.title,!1!==this.options.updateHead&&(Array.from(t.children).forEach((e=>{e!==this.styleElement&&"TITLE"!==e.tagName&&e.remove()})),Array.from(o.children).forEach((e=>{"STYLE"!==e.tagName&&"TITLE"!==e.tagName&&t.appendChild(e.cloneNode(!0))})),console.log("Head updated, xref style element preserved"))}updateBody(e){console.log("started -> updateBody() Method");const t=this.options.swapHtml||"body",o=document.querySelector(t),n=e.querySelector(t);o?n?this.performTransition(o,n):console.error(`New document does not contain element: ${t}`):console.error(`Old document does not contain element: ${t}`)}performTransition(e,t){console.log("Started performTransition");const o=this.options.transition||{},n=o.duration||300,s=o.delay||0,r=o.easing||"ease-in-out",a=o.timeline||"sequential";let i=o.out,l=o.in;!i&&l?i=this.reverseTransition(l):!l&&i&&(l=this.reverseTransition(i)),console.log("Transition options:",{duration:n,delay:s,easing:r,timeline:a}),console.log("Out transition:",i),console.log("In transition:",l),i&&(console.log("Applying out transition"),this.applyTransition(e,i,n,s,r,"out"));const c=()=>{console.log("Applying in transition"),e.style.removeProperty("animation"),e.innerHTML=t.innerHTML,Array.from(t.attributes).forEach((t=>{"style"!==t.name&&e.setAttribute(t.name,t.value)})),l&&this.applyTransition(e,l,n,0,r,"in")};"sequential"===a?(console.log(`Setting timeout for in transition: ${n+s}ms`),setTimeout(c,n+s)):(console.log(`Setting timeout for in transition: ${s}ms (parallel)`),setTimeout(c,s))}reverseTransition(e){return{from:e.to,to:e.from}}applyTransition(e,t,o,n,s,r){console.log(`Applying ${r} transition`);const a=this.createKeyframes(t,r),i=`${a} ${o}ms ${s} ${n}ms forwards`;e.style.setProperty("animation",i),console.log(`Applied ${r} animation: ${i}`),console.log("Current element style:",e.style.cssText),e.offsetWidth;const l=()=>{console.log(`Animation end event fired for ${r} transition`),e.style.removeProperty("animation"),this.removeKeyframes(a),"in"===r&&Object.entries(t.to||{}).forEach((([t,o])=>{e.style.setProperty(this.camelToKebab(t),o)})),console.log(`Cleaned up ${r} animation`),console.log("Current element style after cleanup:",e.style.cssText),e.removeEventListener("animationend",l)};e.addEventListener("animationend",l,{once:!0})}camelToKebab(e){return e.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase()}prefetch(e){!function(e){if(!e.active)return;const t=document.createElement("link");t.rel="prefetch",t.href,t.addEventListener(e.event,(()=>{setTimeout((()=>{var o;document.head.appendChild(t),null===(o=e.callback)||void 0===o||o.call(e)}),e.delay)})),document.head.appendChild(t)}(e)}}return function(t={}){return new e(t)}}));
//# sourceMappingURL=xref.umd.min.js.map
