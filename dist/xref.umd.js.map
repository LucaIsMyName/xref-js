{"version":3,"file":"xref.umd.js","sources":["../src/xref.ts"],"sourcesContent":["interface XrefOptions {\n  updateHead?: boolean;\n  swapHtml?: string;\n  transition?: TransitionOptions;\n}\n\ninterface TransitionOptions {\n  duration?: number;\n  delay?: number;\n  easing?: string;\n  timeline?: \"sequential\" | \"parallel\";\n  in?: TransitionState;\n  out?: TransitionState;\n}\n\ninterface TransitionState {\n  from?: Record<string, string | number>;\n  to?: Record<string, string | number>;\n}\n\nclass Xref {\n  private options: XrefOptions;\n  private styleElement: HTMLStyleElement;\n  private transitionCounter: number = 0;\n\n  constructor(options: XrefOptions = {}) {\n    this.options = {\n      updateHead: true,\n      ...options,\n    };\n    this.styleElement = document.createElement(\"style\");\n    this.styleElement.setAttribute(\"data-xref\", \"true\");\n    document.head.appendChild(this.styleElement);\n    this.init();\n  }\n\n  private init() {\n    console.log(\"started -> init() Method\");\n\n    this.interceptClicks();\n    this.handlePopState();\n  }\n\n  // private currentKeyframes: { in?: string; out?: string } = {};\n  private currentKeyframeName: string | null = null;\n\n  private createKeyframes(transitionState: TransitionState, direction: \"in\" | \"out\"): string {\n    const { from, to } = transitionState;\n    const keyframeName = `xref-${direction}-${++this.transitionCounter}`;\n\n    let keyframeCSS = `@keyframes ${keyframeName} {\n      from {\n        ${Object.entries(from || {})\n          .map(([key, value]) => `${this.camelToKebab(key)}: ${value};`)\n          .join(\" \")}\n      }\n      to {\n        ${Object.entries(to || {})\n          .map(([key, value]) => `${this.camelToKebab(key)}: ${value};`)\n          .join(\" \")}\n      }\n    }`;\n\n    console.log(\"Creating keyframe:\" + keyframeName);\n    console.log(\"Keyframe CSS:\" + keyframeCSS);\n\n    // Remove the previous keyframe if it exists\n    if (this.currentKeyframeName) {\n      this.removeKeyframes(this.currentKeyframeName);\n    }\n\n    // Append the new keyframe to the style element's content\n    this.styleElement.textContent = keyframeCSS;\n    this.currentKeyframeName = keyframeName;\n\n    console.log(\"Keyframe \" + keyframeName + \"appended to <style> element\");\n    console.log(\"Current <style> content: \" + this.styleElement.textContent);\n\n    return keyframeName;\n  }\n\n  private removeKeyframes(keyframeName: string) {\n    console.log(\"Removing keyframe: \" + keyframeName);\n    this.styleElement.textContent = \"\";\n    console.log(\"Keyframe\" + keyframeName + \"removed\");\n    console.log(\"Current <style> content after removal:\" + this.styleElement.textContent);\n    this.currentKeyframeName = null;\n  }\n\n  private interceptClicks() {\n    console.log(\"started -> interceptClicks() Method\");\n\n    document.addEventListener(\"click\", (event) => {\n      const target = event.target as HTMLElement;\n      const anchor = target.closest(\"a\");\n      if (anchor && this.shouldIntercept(anchor)) {\n        event.preventDefault();\n        this.navigate(anchor.href);\n      }\n    });\n  }\n\n  private shouldIntercept(anchor: HTMLAnchorElement): boolean {\n    console.log(\"started -> shouldIntercept() Method\");\n\n    const isSameOrigin = anchor.origin === window.location.origin;\n    const isNotHash = anchor.hash === \"\";\n    return isSameOrigin && isNotHash;\n  }\n\n  private handlePopState() {\n    console.log(\"started -> handlePopState() Method\");\n\n    window.addEventListener(\"popstate\", () => {\n      this.navigate(window.location.href, false);\n    });\n  }\n\n  public async navigate(url: string, pushState: boolean = true) {\n    console.log(\"started -> navigate() Method\");\n\n    try {\n      const content = await this.fetchPage(url);\n      if (content) {\n        if (pushState) {\n          history.pushState(null, \"\", url);\n        }\n        this.updatePage(content);\n      }\n    } catch (error) {\n      console.error(\"Navigation failed:\", error);\n    }\n  }\n  private async fetchPage(url: string): Promise<string> {\n    console.log(\"started -> fetchPage() Method\");\n\n    const response = await fetch(url);\n    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n    return await response.text();\n  }\n\n  private updatePage(content: string) {\n    console.log(\"started -> updatePage() Method\");\n\n    const parser = new DOMParser();\n    const newDoc = parser.parseFromString(content, \"text/html\");\n\n    this.updateHead(newDoc);\n    this.updateBody(newDoc);\n  }\n\n  private updateHead(newDoc: Document) {\n    console.log(\"started -> updateHead() Method\");\n\n    const oldHead = document.head;\n    const newHead = newDoc.head;\n\n    // Always update the title\n    document.title = newDoc.title;\n\n    // If updateHead is false, don't update anything else in the head\n    if (this.options.updateHead === false) {\n      return;\n    }\n\n    // Remove old elements except our style element and title\n    Array.from(oldHead.children).forEach((child) => {\n      if (child !== this.styleElement && child.tagName !== \"TITLE\") {\n        child.remove();\n      }\n    });\n\n    // Add new elements\n    Array.from(newHead.children).forEach((child) => {\n      if (child.tagName !== \"STYLE\" && child.tagName !== \"TITLE\") {\n        oldHead.appendChild(child.cloneNode(true));\n      }\n    });\n\n    console.log(\"Head updated, xref style element preserved\");\n  }\n\n  private updateBody(newDoc: Document) {\n    console.log(\"started -> updateBody() Method\");\n\n    const swapHtml = this.options.swapHtml || \"body\";\n    const oldElement = document.querySelector(swapHtml);\n    const newElement = newDoc.querySelector(swapHtml);\n\n    if (!oldElement) {\n      console.error(`Old document does not contain element: ${swapHtml}`);\n      return;\n    }\n\n    if (!newElement) {\n      console.error(`New document does not contain element: ${swapHtml}`);\n      return;\n    }\n\n    // Type assertions\n    this.performTransition(oldElement as HTMLElement, newElement as HTMLElement);\n    /* this.removeInlineStylesFromRoot(); */\n  }\n\n  private performTransition(oldBody: HTMLElement, newBody: HTMLElement) {\n    console.log(\"Started performTransition\");\n    const transitionOptions = this.options.transition || {};\n    const duration = transitionOptions.duration || 300;\n    const delay = transitionOptions.delay || 0;\n    const easing = transitionOptions.easing || \"ease-in-out\";\n    const timeline = transitionOptions.timeline || \"sequential\";\n\n    let outTransition = transitionOptions.out;\n    let inTransition = transitionOptions.in;\n\n    // If no out transition is set, reverse the in transition\n    if (!outTransition && inTransition) {\n      outTransition = this.reverseTransition(inTransition);\n    }\n    // If no in transition is set, reverse the out transition\n    else if (!inTransition && outTransition) {\n      inTransition = this.reverseTransition(outTransition);\n    }\n\n    console.log(\"Transition options:\", { duration, delay, easing, timeline });\n    console.log(\"Out transition:\", outTransition);\n    console.log(\"In transition:\", inTransition);\n\n    if (outTransition) {\n      console.log(\"Applying out transition\");\n      this.applyTransition(oldBody, outTransition, duration, delay, easing, \"out\");\n    }\n\n    const applyInTransition = () => {\n      console.log(\"Applying in transition\");\n      // Remove the \"out\" animation\n      oldBody.style.removeProperty(\"animation\");\n\n      oldBody.innerHTML = newBody.innerHTML;\n      Array.from(newBody.attributes).forEach((attr) => {\n        if (attr.name !== \"style\") {\n          oldBody.setAttribute(attr.name, attr.value);\n        }\n      });\n\n      if (inTransition) {\n        this.applyTransition(oldBody, inTransition, duration, 0, easing, \"in\");\n      }\n    };\n\n    if (timeline === \"sequential\") {\n      console.log(`Setting timeout for in transition: ${duration + delay}ms`);\n      setTimeout(applyInTransition, duration / 2 + delay);\n    } else {\n      console.log(`Setting timeout for in transition: ${delay}ms (parallel)`);\n      setTimeout(applyInTransition, delay);\n    }\n  }\n\n  private reverseTransition(transition: TransitionState): TransitionState {\n    return {\n      from: transition.to,\n      to: transition.from,\n    };\n  }\n\n  private applyTransition(element: HTMLElement, transitionState: TransitionState, duration: number, delay: number, easing: string, direction: \"in\" | \"out\") {\n    console.log(`Applying ${direction} transition`);\n    const keyframeName = this.createKeyframes(transitionState, direction);\n    const animationCSS = `${keyframeName} ${duration}ms ${easing} ${delay}ms forwards`;\n\n    // Ensure we're setting the animation property correctly\n    element.style.setProperty(\"animation\", animationCSS);\n    console.log(`Applied ${direction} animation: ${animationCSS}`);\n    console.log(`Current element style:`, element.style.cssText);\n\n    // Force a reflow to ensure the animation is applied immediately\n    void element.offsetWidth;\n\n    const cleanup = () => {\n      console.log(`Animation end event fired for ${direction} transition`);\n      element.style.removeProperty(\"animation\");\n\n      // Remove the keyframe immediately after the animation is complete\n      this.removeKeyframes(keyframeName);\n\n      if (direction === \"in\") {\n        Object.entries(transitionState.to || {}).forEach(([key, value]) => {\n          element.style.setProperty(this.camelToKebab(key), value as string);\n        });\n      }\n      console.log(`Cleaned up ${direction} animation`);\n      console.log(`Current element style after cleanup:`, element.style.cssText);\n      element.removeEventListener(\"animationend\", cleanup);\n    };\n\n    element.addEventListener(\"animationend\", cleanup, { once: true });\n  }\n\n  public camelToKebab(str: string): string {\n    return str.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\n  }\n}\n\nfunction xref(options: XrefOptions = {}): Xref {\n  return new Xref(options);\n}\n\nexport default xref;\n"],"names":[],"mappings":"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"}