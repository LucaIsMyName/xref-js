{"version":3,"file":"xref.umd.js","sources":["../src/prefetch.ts","../src/utils.ts","../src/partials.ts","../src/xref.ts"],"sourcesContent":["import { XrefOptions } from \"./xref\";\n\ninterface PrefetchOptions {\n  event?: string;\n  delay?: number;\n  selector?: string;\n  active?: boolean;\n  media?: boolean;\n  css?: boolean;\n  js?: boolean;\n}\n\nexport class Prefetcher {\n  private cache: Map<string, string> = new Map();\n  private options: PrefetchOptions;\n  private xrefOptions: XrefOptions;\n\n  constructor(options: PrefetchOptions, xrefOptions: XrefOptions) {\n    this.options = options;\n    this.xrefOptions = xrefOptions;\n    this.init();\n  }\n\n  private init() {\n    if (!this.options.active) return;\n    document.addEventListener(this.options.event || \"mouseover\", this.handleEvent.bind(this));\n  }\n\n  private handleEvent(event: Event) {\n    const target = event.target as HTMLElement;\n    const link = target.closest(this.options.selector || \"a\") as HTMLAnchorElement | null;\n\n    if (link && this.shouldPrefetch(link)) {\n      setTimeout(() => this.prefetch(link.href), this.options.delay || 100);\n    }\n  }\n\n  private shouldPrefetch(link: HTMLAnchorElement): boolean {\n    return !!(link.href && link.href.startsWith(window.location.origin) && link.href !== window.location.href && !this.cache.has(link.href));\n  }\n\n  private async prefetch(url: string) {\n    try {\n      const response = await fetch(url);\n      const text = await response.text();\n      this.cache.set(url, text);\n      this.xrefOptions.debug ? console.log(`Prefetched HTML: ${url}`) : null;\n\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(text, \"text/html\");\n\n      if (this.options.media) {\n        await this.prefetchMedia(doc);\n      }\n      if (this.options.css) {\n        await this.prefetchCss(doc);\n      }\n      if (this.options.js) {\n        await this.prefetchJs(doc);\n      }\n    } catch (error) {\n      this.xrefOptions.debug ? console.error(\"Failed to prefetch:\" + url, error) : null;\n    }\n  }\n\n  private async prefetchMedia(doc: Document) {\n    const mediaElements = doc.querySelectorAll(\"img, video, audio\");\n    const promises = Array.from(mediaElements).map(async (mediaElement) => {\n      const mediaSrc = (mediaElement as HTMLImageElement | HTMLVideoElement | HTMLAudioElement).src;\n      if (mediaSrc && !this.cache.has(mediaSrc) && !this.isCurrentlyLoaded(mediaSrc)) {\n        try {\n          await this.prefetchResource(mediaSrc);\n        } catch (error) {\n          this.xrefOptions.debug ? console.error(`Failed to prefetch media: ${mediaSrc}`, error) : null;\n        }\n      }\n    });\n    await Promise.all(promises);\n  }\n\n  private async prefetchCss(doc: Document) {\n    const cssElements = doc.querySelectorAll(\"link[rel=stylesheet]\");\n    const promises = Array.from(cssElements).map(async (cssElement) => {\n      const cssHref = (cssElement as HTMLLinkElement).href;\n      if (cssHref && !this.cache.has(cssHref) && !this.isCurrentlyLoaded(cssHref)) {\n        try {\n          await this.prefetchResource(cssHref);\n        } catch (error) {\n          this.xrefOptions.debug ? console.error(`Failed to prefetch CSS: ${cssHref}`, error) : null;\n        }\n      }\n    });\n    await Promise.all(promises);\n  }\n\n  private async prefetchJs(doc: Document) {\n    const jsElements = doc.querySelectorAll(\"script\");\n    const promises = Array.from(jsElements).map(async (jsElement) => {\n      const jsSrc = (jsElement as HTMLScriptElement).src;\n      if (jsSrc && !this.cache.has(jsSrc) && !this.isCurrentlyLoaded(jsSrc)) {\n        try {\n          await this.prefetchResource(jsSrc);\n        } catch (error) {\n          this.xrefOptions.debug ? console.error(`Failed to prefetch JS: ${jsSrc}`, error) : null;\n        }\n      }\n    });\n    await Promise.all(promises);\n  }\n\n  private async prefetchResource(url: string) {\n    try {\n      const response = await fetch(url);\n      const blob = await response.blob();\n      this.cache.set(url, URL.createObjectURL(blob));\n      this.xrefOptions.debug ? console.log(`Prefetched resource: ${url}`) : null;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  private isCurrentlyLoaded(url: string): boolean {\n    const scripts = document.querySelectorAll(\"script\");\n    const links = document.querySelectorAll(\"link\");\n    const images = document.querySelectorAll(\"img\");\n    const audios = document.querySelectorAll(\"audio\");\n    const videos = document.querySelectorAll(\"video\");\n\n    return Array.from(scripts).some((script) => script.src === url) || Array.from(links).some((link) => link.href === url) || Array.from(images).some((img) => img.src === url) || Array.from(audios).some((audio) => audio.src === url) || Array.from(videos).some((video) => video.src === url);\n  }\n\n  public getContent(url: string): string | null {\n    return this.cache.get(url) || null;\n  }\n}\n\nexport function initPrefetcher(options: PrefetchOptions, xrefOptions: XrefOptions): Prefetcher {\n  return new Prefetcher(options, xrefOptions);\n}\n","/**\n * @description Convert camelCase to kebab-case\n */\nexport function camelToKebab(str: string): string {\n  return str.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\n\n/**\n * @description Convert kebab-case to camelCase\n */\nexport function kebabToCamel(str:string): string {\n  return str.replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n}\n","import { XrefOptions, TransitionOptions, TransitionState, PartialTransition } from \"./xref\";\nimport { camelToKebab } from \"./utils\";\n\n/**\n * \n * @description Handle partial transitions for a given element \n */\nexport async function handlePartials(partials: PartialTransition[], oldElement: HTMLElement, newElement: HTMLElement, options: XrefOptions, direction: \"in\" | \"out\") {\n  options.debug ? console.log(`Handling partials for ${direction} transition`) : null;\n\n  const partialPromises = partials.flatMap((partial, index) => {\n    const elements = oldElement.querySelectorAll(partial.element);\n    options.debug ? console.log(`Found ${elements.length} elements matching selector: ${partial.element}`) : null;\n\n    return Array.from(elements).map((element: any) => {\n      const mergedOptions = mergeOptions(partial, options.transition, index);\n      let transitionState = direction === \"out\" ? partial.out : partial.in;\n\n      // If the transition for the current direction is not defined, reverse the other direction\n      if (!transitionState) {\n        const oppositeTransition = direction === \"out\" ? partial.in : partial.out;\n        if (oppositeTransition) {\n          transitionState = reverseTransition(oppositeTransition);\n        }\n      }\n\n      if (transitionState) {\n        if (direction === \"in\") {\n          element.style.removeProperty(\"visibility\");\n        }\n        return applyPartialTransition(element as HTMLElement, transitionState, mergedOptions, direction);\n      }\n      return Promise.resolve();\n    });\n  });\n\n  await Promise.all(partialPromises);\n}\n\n/**\n * \n * @description Merge partial transition options with global transition options\n */\nfunction mergeOptions(partial: PartialTransition, globalTransition: TransitionOptions | undefined, index: number): TransitionOptions {\n  const globalPartial = globalTransition?.partials?.[index] || {};\n  return {\n    ...globalTransition,\n    ...globalPartial,\n    duration: partial.duration ?? globalTransition?.duration,\n    delay: partial.delay ?? globalTransition?.delay,\n    easing: partial.easing ?? globalTransition?.easing,\n  };\n}\n\n/**\n * \n * @description Reverse the transition state\n */\nfunction reverseTransition(transition: TransitionState): TransitionState {\n  return {\n    from: transition.to,\n    to: transition.from,\n  };\n}\n\n/**\n * \n * @description Hide partial elements\n */\nexport function hidePartials(partials: PartialTransition[], element: HTMLElement) {\n  partials.forEach((partial) => {\n    const elements = element.querySelectorAll(partial.element);\n    elements.forEach((el: HTMLElement | any) => {\n      el.style.visibility = \"hidden\";\n    });\n  });\n}\n\n/**\n * \n * @description Show partial elements\n */\nexport function showPartials(partials: PartialTransition[], element: HTMLElement) {\n  partials.forEach((partial) => {\n    const elements = element.querySelectorAll(partial.element);\n    elements.forEach((el: HTMLElement | any) => {\n      el.style.visibility = \"visible\";\n    });\n  });\n}\n\n/**\n * @description Apply partial transition to an element\n * */\nasync function applyPartialTransition(element: HTMLElement, transitionState: TransitionState, options: TransitionOptions, direction: \"in\" | \"out\"): Promise<void> {\n  return new Promise((resolve) => {\n    const duration = options.duration || 300;\n    const delay = options.delay ?? 0;\n    const easing = options.easing || \"ease-in-out\";\n\n    const keyframeName = createKeyframes(transitionState, direction);\n    const animationCSS = `${keyframeName} ${duration}ms ${easing} ${delay}ms forwards`;\n\n    element.style.setProperty(\"animation\", animationCSS);\n    console.log(`Applied ${direction} animation to partial: ${animationCSS}`);\n    console.log(\"Current partial element style:\", element.style.cssText);\n\n    // Force a reflow to ensure the animation is applied immediately\n    void element.offsetWidth;\n\n    const cleanup = () => {\n      console.log(`Animation end event fired for ${direction} transition on partial: ${element.tagName}`);\n      element.style.removeProperty(\"animation\");\n\n      // Remove the keyframe immediately after the animation is complete\n      removeKeyframes(keyframeName);\n\n      if (direction === \"in\") {\n        Object.entries(transitionState.to || {}).forEach(([key, value]) => {\n          element.style.setProperty(camelToKebab(key), value as string);\n        });\n      }\n      console.log(`Cleaned up ${direction} animation for partial: ${element.tagName}`);\n      console.log(\"Current partial element style after cleanup:\", element.style.cssText);\n\n      resolve();\n    };\n\n    element.addEventListener(\"animationend\", cleanup, { once: true });\n  });\n}\n\nfunction createKeyframes(transitionState: TransitionState, direction: \"in\" | \"out\"): string {\n  const { from, to } = transitionState;\n  let randomId = Math.random().toString(36).substr(2, 9);\n  const keyframeName = `xref-partial-${direction}-${randomId}`;\n\n  const keyframeCSS = `@keyframes ${keyframeName} {\n    from {\n      ${Object.entries(from || {})\n        .map(([key, value]) => `${camelToKebab(key)}: ${value};`)\n        .join(\" \")}\n    }\n    to {\n      ${Object.entries(to || {})\n        .map(([key, value]) => `${camelToKebab(key)}: ${value};`)\n        .join(\" \")}\n    }\n  }`;\n\n  const styleElement = document.createElement(\"style\");\n  styleElement.textContent = keyframeCSS;\n  styleElement.setAttribute(keyframeName, '');\n  document.head.appendChild(styleElement);\n\n  return keyframeName;\n}\n\nfunction removeKeyframes(keyframeName: string) {\n  // this is bad implementation, remove by keyframeName not :last-of-type selector\n  // const styleElement = document.querySelector(`style:not([data-xref=\"true\"]):last-of-type`);\n\n  const styleElement = document.querySelector(`style[${keyframeName}]`);\n  if (styleElement) {\n    styleElement.remove();\n  }\n}\n","import { Prefetcher, initPrefetcher } from \"./prefetch\";\nimport { handlePartials, hidePartials, showPartials } from \"./partials\";\nimport { camelToKebab } from \"./utils\";\n\nexport interface XrefOptions {\n  debug?: boolean;\n  updateHead?: boolean;\n  transition?: TransitionOptions;\n  prefetch?: PrefetchOptions;\n  head?: HeadOptions;\n}\n\nexport interface HeadOptions {\n  update?: boolean;\n  retrigger?: {\n    css?: boolean;\n    js?: boolean;\n    include?: string | RegExp;\n    exclude?: string | RegExp;\n  };\n}\n\nexport interface PrefetchOptions {\n  active: boolean;\n  delay: number;\n  event: string;\n  selector?: string;\n  media?: boolean;\n  css?: boolean;\n  js?: boolean;\n}\n\nexport interface TransitionOptions {\n  duration?: number;\n  delay?: number;\n  easing?: string;\n  timeline?: \"sequential\" | \"parallel\";\n  in?: TransitionState;\n  out?: TransitionState;\n  callback?: TransitionCallbacks;\n  state?: AnimationState;\n  swapHtml?: string;\n  partials?: PartialTransition[];\n}\n\nexport interface PartialTransition {\n  element: string;\n  duration?: number;\n  delay?: number;\n  easing?: string;\n  in?: TransitionState;\n  out?: TransitionState;\n}\n\nexport interface TransitionState {\n  from?: Record<string, string | number>;\n  to?: Record<string, string | number>;\n}\n\nexport interface AnimationState {\n  started: boolean;\n  playing: boolean;\n  paused: boolean;\n  finished: boolean;\n}\n\nexport interface TransitionCallbacks {\n  onEnter?: () => void;\n  onStart?: () => void;\n  onPlay?: () => void;\n  onPause?: () => void;\n  onFinish?: () => void;\n}\n\n/**\n * The main Xref class that handles\n * navigation and transitions.\n *\n * @returns The Xref instance.\n *\n * @description This is the main class that handles navigation and transitions.\n * It intercepts clicks on internal links, fetches the content of the linked page,\n * updates the document head and body, and performs transitions between the\n * old and new content. It also handles popstate events to support back\n * and forward navigation.\n */\nclass Xref {\n  private options: XrefOptions;\n  private styleElement: HTMLStyleElement;\n  private transitionCounter: number = 0;\n  private prefetcher: Prefetcher | null = null;\n  private animationState: AnimationState;\n\n  /**\n   * @description This is the constructor of the Xref class.\n   * It initializes the Xref instance with the given options,\n   * creates a style element to store the keyframes for transitions,\n   * and sets the initial animation state.\n   */\n  constructor(options: XrefOptions = {}) {\n    this.options = {\n      updateHead: true,\n      prefetch: {\n        active: false,\n        delay: 0,\n        event: \"mouseover\",\n        media: false,\n        css: false,\n        js: false,\n      },\n      ...options,\n    };\n    this.styleElement = document.createElement(\"style\");\n    this.styleElement.setAttribute(\"data-xref\", \"true\");\n    document.head.appendChild(this.styleElement);\n    this.animationState = {\n      started: false,\n      playing: true,\n      paused: false,\n      finished: false,\n      ...(this.options.transition?.state as Partial<AnimationState>),\n    };\n    this.init();\n  }\n\n  /**\n   * @description This method initializes the Xref instance\n   * by intercepting clicks on internal links, handling popstate events,\n   * and initializing the prefetcher if prefetching is enabled.\n   */\n  private init() {\n    this.options.debug ? console.log(\"started -> init() Method\") : null;\n\n    this.interceptClicks();\n    this.handlePopState();\n\n    if (this.options.prefetch && this.options.prefetch.active) {\n      this.prefetcher = initPrefetcher(this.options.prefetch, this.options);\n    }\n  }\n\n  private currentKeyframeName: string | null = null;\n\n  /**\n   * @description This method creates keyframes\n   * for the given transition state\n   * and direction.\n   */\n  private createKeyframes(transitionState: TransitionState, direction: \"in\" | \"out\"): string {\n    const { from, to } = transitionState;\n    const keyframeName = `xref-${direction}-${++this.transitionCounter}`;\n\n    let keyframeCSS = `@keyframes ${keyframeName} {\n      from {\n        ${Object.entries(from || {})\n          .map(([key, value]) => `${camelToKebab(key)}: ${value};`)\n          .join(\" \")}\n      }\n      to {\n        ${Object.entries(to || {})\n          .map(([key, value]) => `${camelToKebab(key)}: ${value};`)\n          .join(\" \")}\n      }\n    }`;\n\n    this.options.debug ? console.log(\"Creating keyframe:\" + keyframeName) : null;\n    this.options.debug ? console.log(\"Keyframe CSS:\" + keyframeCSS) : null;\n\n    // Remove the previous keyframe if it exists\n    if (this.currentKeyframeName) {\n      this.removeKeyframes(this.currentKeyframeName);\n    }\n\n    // Append the new keyframe to the style element's content\n    this.styleElement.textContent = keyframeCSS;\n    this.currentKeyframeName = keyframeName;\n\n    this.options.debug ? console.log(\"Keyframe \" + keyframeName + \"appended to <style> element\") : null;\n    this.options.debug ? console.log(\"Current <style> content: \" + this.styleElement.textContent) : null;\n\n    return keyframeName;\n  }\n\n  /**\n   * @param keyframeName\n   * @description This method removes the keyframes\n   * with the given name from the style element.\n   */\n  private removeKeyframes(keyframeName: string) {\n    this.options.debug ? console.log(\"Removing keyframe: \" + keyframeName) : null;\n    this.styleElement.textContent = \"\";\n    this.options.debug ? console.log(\"Keyframe\" + keyframeName + \"removed\") : null;\n    this.options.debug ? console.log(\"Current <style> content after removal:\" + this.styleElement.textContent) : null;\n    this.currentKeyframeName = null;\n  }\n\n  /**\n   * @description This method intercepts clicks\n   * on internal links and prevents the default\n   * browser navigation behavior.\n   */\n  private interceptClicks() {\n    this.options.debug ? console.log(\"started -> interceptClicks() Method\") : null;\n\n    document.addEventListener(\"click\", (event) => {\n      const target = event.target as HTMLElement;\n      const anchor = target.closest(\"a\");\n      if (anchor && this.shouldIntercept(anchor as HTMLAnchorElement)) {\n        event.preventDefault();\n        this.runCallback(\"onEnter\");\n        this.navigate(anchor.href);\n      }\n    });\n  }\n\n  /**\n   * @description This method checks if the\n   * anchor should be intercepted based on\n   * the current URL and the anchor's href.\n   */\n  private shouldIntercept(anchor: HTMLAnchorElement): boolean {\n    this.options.debug ? console.log(\"started -> shouldIntercept() Method\") : null;\n\n    const currentUrl = new URL(window.location.href);\n    const linkUrl = new URL(anchor.href);\n\n    // Check if it's an internal link\n    const isSameOrigin = linkUrl.origin === currentUrl.origin;\n\n    // Check if it's not the current page or just a hash change\n    const isSamePage = linkUrl.pathname === currentUrl.pathname && linkUrl.search === currentUrl.search;\n    const isJustHashChange = isSamePage && linkUrl.hash !== currentUrl.hash;\n\n    // Intercept only if it's an internal link and not the same page or just a hash change\n    return isSameOrigin && !isSamePage && !isJustHashChange;\n  }\n\n  /**\n   * @description This method handles popstate events\n   * to support back and forward navigation.\n   */\n  private handlePopState() {\n    this.options.debug ? console.log(\"started -> handlePopState() Method\") : null;\n\n    window.addEventListener(\"popstate\", () => {\n      this.navigate(window.location.href, false);\n    });\n  }\n\n  /**\n   * @description This method navigates to the given URL\n   * and updates the page content. If prefetching is enabled\n   * and the content is already prefetched, it uses the\n   * prefetched content instead of fetching it again.\n   * If pushState is true, it updates the browser history.\n   */\n  public async navigate(url: string, pushState: boolean = true) {\n    this.options.debug ? console.log(\"started -> navigate() Method\") : null;\n\n    try {\n      let content: string | null = null;\n      if (this.prefetcher) {\n        content = this.prefetcher.getContent(url);\n      }\n\n      if (!content) {\n        content = await this.fetchPage(url);\n      }\n\n      if (content) {\n        if (pushState) {\n          history.pushState(null, \"\", url);\n        }\n        this.updatePage(content);\n      }\n    } catch (error) {\n      this.options.debug ? console.error(\"Navigation failed:\", error) : null;\n    }\n  }\n\n  /**\n   * @description This method fetches the content of the given URL\n   * and returns it as a string. It throws an error if the request fails.\n   */\n  private async fetchPage(url: string): Promise<string> {\n    this.options.debug ? console.log(\"started -> fetchPage() Method\") : null;\n\n    const response = await fetch(url);\n    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n    return await response.text();\n  }\n\n  /**\n   * @description This method updates the page content\n   * with the new content fetched from the server.\n   * It updates the head and body of the document\n   * based on the new content.\n   */\n  private async updatePage(content: string) {\n    this.options.debug ? console.log(\"started -> updatePage() Method\") : null;\n\n    const parser = new DOMParser();\n    const newDoc = parser.parseFromString(content, \"text/html\");\n\n    // Update the body content\n    await this.updateBody(newDoc);\n\n    // Update the head content\n    this.updateHead(newDoc);\n\n    // Handle all scripts (both in head and body)\n    this.handleScripts(document, newDoc);\n\n    // Trigger a custom event to signal that the page has been updated\n    const event = new CustomEvent(\"xrefPageUpdated\");\n    document.dispatchEvent(event);\n\n    window.scrollTo(0, 0);\n  }\n\n  private updateStyles(oldDoc: Document, newDoc: Document) {\n    // Get all styles from old and new documents\n    const oldStyles = Array.from(oldDoc.querySelectorAll('style:not([data-xref=\"true\"])'));\n    const newStyles = Array.from(newDoc.querySelectorAll(\"style\"));\n\n    // Remove old styles\n    oldStyles.forEach((style) => style.remove());\n\n    // Add new styles\n    newStyles.forEach((style) => {\n      const newStyle = document.createElement(\"style\");\n      newStyle.textContent = style.textContent;\n      // Copy any attributes\n      Array.from(style.attributes).forEach((attr) => {\n        newStyle.setAttribute(attr.name, attr.value);\n      });\n      document.head.appendChild(newStyle);\n    });\n  }\n\n  /**\n   * @description This method updates the head of the document\n   * with the new head from the fetched content. It updates\n   * the title and other head elements based on the new content.\n   */\n  private updateHead(newDoc: Document) {\n    this.options.debug ? console.log(\"started -> updateHead() Method\") : null;\n\n    const oldHead = document.head;\n    const newHead = newDoc.head;\n\n    // Always update the title\n    document.title = newDoc.title;\n\n    if (this.options.head?.update === false) {\n      return;\n    }\n\n    // Remove old elements except our style element and title\n    Array.from(oldHead.children).forEach((child) => {\n      if (child !== this.styleElement && child.tagName !== \"TITLE\") {\n        child.remove();\n      }\n    });\n\n    // Add new elements\n    Array.from(newHead.children).forEach((child) => {\n      if (/*child.tagName !== \"STYLE\" &&*/ child.tagName !== \"TITLE\") {\n        const newChild = child.cloneNode(true) as HTMLElement;\n        oldHead.appendChild(newChild);\n        this.retriggerElement(newChild);\n      }\n    });\n\n    this.options.debug ? console.log(\"Head updated, xref style element preserved\") : null;\n  }\n\n  private retriggerElement(element: HTMLElement) {\n    const { retrigger } = this.options.head || {};\n    if (!retrigger) return;\n\n    const shouldRetrigger = (el: HTMLElement): boolean => {\n      if (retrigger.include && !el.matches(retrigger.include.toString())) return false;\n      if (retrigger.exclude && el.matches(retrigger.exclude.toString())) return false;\n      return true;\n    };\n\n    if (element.tagName === \"LINK\" && retrigger.css && shouldRetrigger(element)) {\n      const link = element as HTMLLinkElement;\n      link.href = link.href.split(\"?\")[0] + \"?t=\" + new Date().getTime();\n    } else if (element.tagName === \"SCRIPT\" && retrigger.js && shouldRetrigger(element)) {\n      const script = element as HTMLScriptElement;\n      const newScript = document.createElement(\"script\");\n      Array.from(script.attributes).forEach((attr) => newScript.setAttribute(attr.name, attr.value));\n      newScript.textContent = script.textContent;\n      script.parentNode?.replaceChild(newScript, script);\n    }\n  }\n\n  /**\n   * @description This method updates the body of the document\n   * with the new body from the fetched content. It updates\n   * the content of the swapHtml element based on the new content.\n   * It also performs the transition between the old and new content.\n   */\n  private async updateBody(newDoc: Document) {\n    this.options.debug ? console.log(\"started -> updateBody() Method\") : null;\n\n    const swapHtml = this.options.transition?.swapHtml || \"body\";\n    const oldElement = document.querySelector(swapHtml);\n    const newElement = newDoc.querySelector(swapHtml);\n\n    if (!oldElement || !newElement) {\n      this.options.debug ? console.error(`Element not found: ${swapHtml}`) : null;\n      return;\n    }\n\n    await this.performTransition(oldElement as HTMLElement, newElement as HTMLElement);\n\n    // Update content of swapHtml\n    oldElement.innerHTML = newElement.innerHTML;\n    Array.from(newElement.attributes).forEach((attr) => {\n      if (attr.name !== \"style\") {\n        oldElement.setAttribute(attr.name, attr.value);\n      }\n    });\n  }\n\n  /**\n   * @description This method handles the scripts in the new content\n   * by comparing them with the old content and adding or removing\n   * scripts as needed. It also re-executes inline scripts.\n   * This is necessary to ensure that the scripts are executed\n   * when the new content is added to the document.\n   */\n  private handleScripts(oldDoc: Document, newDoc: Document) {\n    const handleScriptsInElement = (oldElement: Element, newElement: Element) => {\n      const oldScripts = Array.from(oldElement.querySelectorAll(\"script\"));\n      const newScripts = Array.from(newElement.querySelectorAll(\"script\"));\n\n      // Remove scripts that are in the old page but not in the new page\n      oldScripts.forEach((script) => {\n        const matchingNewScript = newScripts.find((newScript) => newScript.src === script.src && newScript.textContent === script.textContent);\n        if (!matchingNewScript) {\n          script.remove();\n        }\n      });\n\n      // Add new scripts or re-execute existing ones\n      newScripts.forEach((newScript) => {\n        const existingScript = oldScripts.find((script) => script.src === newScript.src && script.textContent === script.textContent);\n\n        if (existingScript) {\n          // Re-execute inline script\n          if (!newScript.src) {\n            const scriptElement = document.createElement(\"script\");\n            Array.from(newScript.attributes).forEach((attr) => scriptElement.setAttribute(attr.name, attr.value));\n            scriptElement.textContent = newScript.textContent;\n            existingScript.parentNode?.replaceChild(scriptElement, existingScript);\n          }\n          // For external scripts, we create a new script element to force a reload\n          else {\n            const scriptElement = document.createElement(\"script\");\n            Array.from(newScript.attributes).forEach((attr) => scriptElement.setAttribute(attr.name, attr.value));\n            existingScript.parentNode?.replaceChild(scriptElement, existingScript);\n          }\n        } else {\n          // Add new script\n          const scriptElement = document.createElement(\"script\");\n          Array.from(newScript.attributes).forEach((attr) => scriptElement.setAttribute(attr.name, attr.value));\n          scriptElement.textContent = newScript.textContent;\n          oldElement.appendChild(scriptElement);\n        }\n\n        // Remove duplicate styles\n        let allStyles = document.querySelectorAll(\"style\");\n        let allStylesArray = Array.from(allStyles);\n        let allStylesText = allStylesArray.map((style) => style.textContent);\n        let allStylesTextSet = new Set(allStylesText);\n        let allStylesTextArray = Array.from(allStylesTextSet);\n\n        allStylesArray.forEach((style) => {\n          let styleText = style.textContent;\n          let styleTextIndex = allStylesTextArray.indexOf(styleText);\n          if (styleTextIndex > 0) {\n            style.remove();\n          }\n        });\n      });\n    };\n\n    // Handle scripts in the head\n    handleScriptsInElement(oldDoc.head, newDoc.head);\n\n    // Handle scripts in the body\n    handleScriptsInElement(oldDoc.body, newDoc.body);\n  }\n\n  /**\n   * @description This method performs the transition\n   * between the old and new content by applying the\n   * in and out transitions to the elements.\n   * It also handles the transition timeline, duration,\n   * delay, and easing.\n   */\n  // private async performTransition(oldElement: HTMLElement, newElement: HTMLElement) {\n  //   this.options.debug ? console.log(\"Started performTransition\") : null;\n  //   const transitionOptions = this.options.transition || {};\n  //   const duration = transitionOptions.duration || 300;\n  //   const delay = transitionOptions.delay || 0;\n  //   const easing = transitionOptions.easing || \"ease-in-out\";\n\n  //   let outTransition = transitionOptions.out;\n  //   let inTransition = transitionOptions.in;\n\n  //   this.setTransitionState(\"started\", true);\n  //   this.runCallback(\"onStart\");\n\n  //   // Get partials outside swapHtml\n  //   const partialsOutsideSwapHtml = this.getPartialsOutsideSwapHtml();\n\n  //   // 1. Animate partials \"out\"\n  //   if (partialsOutsideSwapHtml.length > 0) {\n  //     this.options.debug ? console.log(\"Applying partial out transitions\") : null;\n  //     const partialsOutPromise = handlePartials(partialsOutsideSwapHtml, document.body, document.body, this.options, \"out\");\n\n  //     // Wait for the longest partial out animation to complete\n  //     await partialsOutPromise;\n\n  //     // Hide partials after out animations\n  //     hidePartials(partialsOutsideSwapHtml, document.body);\n  //   }\n\n  //   // 2. Animate swapHtml out\n  //   if (outTransition) {\n  //     this.options.debug ? console.log(\"Applying main out transition\") : null;\n  //     await this.applyTransition(oldElement, outTransition, duration, delay, easing, \"out\");\n  //   }\n\n  //   // Update content of swapHtml\n  //   oldElement.innerHTML = newElement.innerHTML;\n  //   Array.from(newElement.attributes).forEach((attr) => {\n  //     if (attr.name !== \"style\") {\n  //       oldElement.setAttribute(attr.name, attr.value);\n  //     }\n  //   });\n\n  //   // 3. Animate swapHtml in\n  //   if (inTransition) {\n  //     this.options.debug ? console.log(\"Applying main in transition\") : null;\n  //     await this.applyTransition(oldElement, inTransition, duration, delay, easing, \"in\");\n  //   }\n\n  //   // 4. Animate partials \"in\"\n  //   if (partialsOutsideSwapHtml.length > 0) {\n  //     hidePartials(partialsOutsideSwapHtml, document.body);\n  //     await handlePartials(partialsOutsideSwapHtml, document.body, document.body, this.options, \"in\");\n  //   }\n\n  //   // 5. Partials visible and DOM is ready with new Page\n  //   this.setTransitionState(\"finished\", true);\n  //   this.runCallback(\"onFinish\");\n\n  //   window.scrollTo(0, 0);\n  // }\n  private async performTransition(oldElement: HTMLElement, newElement: HTMLElement) {\n    this.options.debug ? console.log(\"Started performTransition\") : null;\n    const transitionOptions = this.options.transition || {};\n    const duration = transitionOptions.duration || 300;\n    const delay = transitionOptions.delay || 0;\n    const easing = transitionOptions.easing || \"ease-in-out\";\n\n    let outTransition = transitionOptions.out;\n    let inTransition = transitionOptions.in;\n\n    this.setTransitionState(\"started\", true);\n    this.runCallback(\"onStart\");\n\n    // Calculate total transition time for all phases\n    const partialsOutsideSwapHtml = this.getPartialsOutsideSwapHtml();\n    const totalDuration =\n      (partialsOutsideSwapHtml.length > 0 ? duration : 0) + // partials out\n      (outTransition ? duration : 0) + // swap html out\n      (inTransition ? duration : 0) + // swap html in\n      (partialsOutsideSwapHtml.length > 0 ? duration : 0); // partials in\n\n    // Track elapsed time\n    let elapsedTime = 0;\n\n    // 1. Animate partials \"out\"\n    if (partialsOutsideSwapHtml.length > 0) {\n      this.options.debug ? console.log(\"Applying partial out transitions\") : null;\n      const partialsOutPromise = handlePartials(partialsOutsideSwapHtml, document.body, document.body, this.options, \"out\");\n      await partialsOutPromise;\n      elapsedTime += duration;\n      hidePartials(partialsOutsideSwapHtml, document.body);\n    }\n\n    // 2. Animate swapHtml out\n    if (outTransition) {\n      this.options.debug ? console.log(\"Applying main out transition\") : null;\n      await this.applyTransition(oldElement, outTransition, duration, delay, easing, \"out\");\n      elapsedTime += duration;\n    }\n\n    // Check if we've reached the midpoint\n    if (elapsedTime >= totalDuration / 2) {\n      // We've passed the midpoint - update styles now\n      if (this.options.head?.update && this.options.head?.retrigger?.css) {\n        const parser = new DOMParser();\n        const newDoc = parser.parseFromString(newElement.ownerDocument.documentElement.outerHTML, \"text/html\");\n        this.updateStyles(document, newDoc);\n      }\n    }\n\n    // Update content of swapHtml\n    oldElement.innerHTML = newElement.innerHTML;\n    Array.from(newElement.attributes).forEach((attr) => {\n      if (attr.name !== \"style\") {\n        oldElement.setAttribute(attr.name, attr.value);\n      }\n    });\n\n    // If we haven't reached midpoint yet, wait for it\n    if (elapsedTime < totalDuration / 2) {\n      const timeToMidpoint = totalDuration / 2 - elapsedTime;\n      await new Promise((resolve) => setTimeout(resolve, timeToMidpoint));\n      if (this.options.head?.update && this.options.head?.retrigger?.css) {\n        const parser = new DOMParser();\n        const newDoc = parser.parseFromString(newElement.ownerDocument.documentElement.outerHTML, \"text/html\");\n        this.updateStyles(document, newDoc);\n      }\n    }\n\n    // 3. Animate swapHtml in\n    if (inTransition) {\n      this.options.debug ? console.log(\"Applying main in transition\") : null;\n      await this.applyTransition(oldElement, inTransition, duration, delay, easing, \"in\");\n    }\n\n    // 4. Animate partials \"in\"\n    if (partialsOutsideSwapHtml.length > 0) {\n      hidePartials(partialsOutsideSwapHtml, document.body);\n      await handlePartials(partialsOutsideSwapHtml, document.body, document.body, this.options, \"in\");\n    }\n\n    // 5. Partials visible and DOM is ready with new Page\n    this.setTransitionState(\"finished\", true);\n    this.runCallback(\"onFinish\");\n\n    window.scrollTo(0, 0);\n  }\n\n  private getPartialsOutsideSwapHtml(): PartialTransition[] {\n    const swapHtml = this.options.transition?.swapHtml || \"body\";\n    const swapHtmlElement = document.querySelector(swapHtml);\n\n    return (this.options.transition?.partials || []).filter((partial) => {\n      const elements = document.querySelectorAll(partial.element);\n      return Array.from(elements).every((el) => !swapHtmlElement?.contains(el));\n    });\n  }\n\n  /**\n   * @description This method reverses the given transition\n   * by swapping the from and to states. This is useful\n   * for creating the \"out\" transition from the \"in\" transition.\n   */\n  private reverseTransition(transition: TransitionState): TransitionState {\n    return {\n      from: transition.to,\n      to: transition.from,\n    };\n  }\n\n  /**\n   * @description This method applies the transition to the element\n   * by creating the keyframes, setting the animation properties,\n   * and cleaning up after the animation is complete.\n   */\n  private applyTransition(element: HTMLElement, transitionState: TransitionState, duration: number, delay: number, easing: string, direction: \"in\" | \"out\"): Promise<void> {\n    return new Promise((resolve) => {\n      this.options.debug ? console.log(`Applying ${direction} transition`) : null;\n      const keyframeName = this.createKeyframes(transitionState, direction);\n      const animationCSS = `${keyframeName} ${duration}ms ${easing} ${delay}ms forwards`;\n\n      element.style.setProperty(\"animation\", animationCSS);\n      this.options.debug ? console.log(`Applied ${direction} animation: ${animationCSS}`) : null;\n      this.options.debug ? console.log(\"Current element style:\", element.style.cssText) : null;\n\n      // Force a reflow to ensure the animation is applied immediately\n      void element.offsetWidth;\n\n      const cleanup = () => {\n        this.options.debug ? console.log(`Animation end event fired for ${direction} transition`) : null;\n        element.style.removeProperty(\"animation\");\n\n        // Remove the keyframe immediately after the animation is complete\n        this.removeKeyframes(keyframeName);\n\n        if (direction === \"in\") {\n          Object.entries(transitionState.to || {}).forEach(([key, value]) => {\n            element.style.setProperty(camelToKebab(key), value as string);\n          });\n        }\n        this.options.debug ? console.log(`Cleaned up ${direction} animation`) : null;\n        this.options.debug ? console.log(\"Current element style after cleanup:\", element.style.cssText) : null;\n\n        resolve();\n      };\n\n      element.addEventListener(\"animationend\", cleanup, { once: true });\n    });\n  }\n  // Current implementation relies on setTimeout and animationend events\n  // Recommendation: Use requestAnimationFrame for smoother animations\n\n  /**\n   * @description This method sets the transition state\n   * based on the given key and value. This is useful\n   * for tracking the state of the transition.\n   */\n  private setTransitionState(key: keyof AnimationState, value: boolean) {\n    this.animationState[key] = value;\n  }\n\n  /**\n   *\n   * @description This method runs the callback with the given name\n   * if it exists in the transition options. This is useful for\n   * running custom code at different stages of the transition.\n   */\n  private runCallback(callbackName: keyof TransitionCallbacks) {\n    const callback = this.options.transition?.callback?.[callbackName];\n    if (callback && typeof callback === \"function\") {\n      callback();\n    }\n  }\n\n  /**\n   * @description This method starts the transition\n   * and sets the animation state accordingly.\n   */\n  public startTransition() {\n    this.setTransitionState(\"started\", true);\n    this.setTransitionState(\"playing\", true);\n    this.setTransitionState(\"paused\", false);\n    this.setTransitionState(\"finished\", false);\n    this.runCallback(\"onStart\");\n    this.runCallback(\"onPlay\");\n  }\n\n  /**\n   * @description This method pauses the transition\n   * and sets the animation state accordingly.\n   */\n  public pauseTransition() {\n    if (this.animationState.playing) {\n      this.setTransitionState(\"playing\", false);\n      this.setTransitionState(\"paused\", true);\n      this.runCallback(\"onPause\");\n\n      // Pause transition\n      const element = document.querySelector(this.options.transition?.swapHtml || \"body\");\n      if (element instanceof HTMLElement) {\n        element.style.animationPlayState = \"paused\";\n      }\n    }\n  }\n\n  /**\n   * @description This method resumes the transition\n   * and sets the animation state accordingly.\n   */\n  public resumeTransition() {\n    if (this.animationState.paused) {\n      this.setTransitionState(\"playing\", true);\n      this.setTransitionState(\"paused\", false);\n      this.runCallback(\"onPlay\");\n\n      // Play transition\n      const element = document.querySelector(this.options.transition?.swapHtml || \"body\");\n      if (element instanceof HTMLElement) {\n        element.style.animationPlayState = \"running\";\n      }\n    }\n  }\n\n  /**\n   * @description This method finishes the transition\n   * and cleans up the animation\n   * */\n  public finishTransition() {\n    this.setTransitionState(\"playing\", false);\n    this.setTransitionState(\"paused\", false);\n    this.setTransitionState(\"finished\", true);\n    this.runCallback(\"onFinish\");\n  }\n}\n\n/**\n * @description This function creates a new Xref instance\n * with the given options and returns it. This is the main\n * entry point for using Xref in a project.\n */\nfunction xref(options: XrefOptions = {}): Xref {\n  return new Xref(options);\n}\n\nexport default xref;\n"],"names":[],"mappings":"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"}