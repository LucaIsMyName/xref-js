function setupViewTransitions(e){document.addEventListener("click",e=>{const t=e.target,n=t.closest("a");if(n&&isInternalLink$1(n)){e.preventDefault();const t=window.xref;"function"==typeof(null==t?void 0:t.navigateTo)&&t.navigateTo(n.href)}})}function isInternalLink$1(e){return e.href.startsWith(window.location.origin)}function animate(e,t){const n="string"==typeof e?document.querySelectorAll(e):e,{duration:o,delay:i,easing:r,in:a,out:s,timeline:c="sequential"}=t,l=createTransitionStyles(n,{duration:o,delay:i,easing:r,in:a,out:s,timeline:c});applyStyles(l),document.addEventListener("startViewTransition",()=>{applyStyles(l)}),document.addEventListener("finishViewTransition",()=>{removeStyles()})}function createTransitionStyles(e,t){const{duration:n,delay:o,easing:i,in:r,out:a}=t;let s="";return e.forEach((e,t)=>{const c=`xref-animated-${t}`;e.id=c;const l=createKeyframes(r,"in"),u=createKeyframes(a,"out");s+=`\n      @keyframes ${l.name} {\n        ${l.rules}\n      }\n      @keyframes ${u.name} {\n        ${u.rules}\n      }\n      #${c} {\n        animation: ${n}ms ${o}ms ${i} both var(--xref-animation-name, none);\n      }\n      #${c}::view-transition-new {\n        animation: ${n}ms ${o}ms ${i} both ${l.name};\n      }\n      #${c}::view-transition-old {\n        animation: ${n}ms ${o}ms ${i} both ${u.name};\n      }\n    `}),s}function createKeyframes(e,t){const n=`xref-${t}-${Math.random().toString(36).substr(2,9)}`,o=(null==e?void 0:e.from)?objectToCSSString(e.from):"",i=(null==e?void 0:e.to)?objectToCSSString(e.to):"",r=`\n    from { ${o} }\n    to { ${i} }\n  `;return{name:n,rules:r}}function objectToCSSString(e){return Object.entries(e).map(([e,t])=>`${camelToKebabCase(e)}: ${t};`).join(" ")}function camelToKebabCase(e){return e.replace(/[A-Z]/g,e=>`-${e.toLowerCase()}`)}function applyStyles(e){removeStyles();const t=document.createElement("style");t.textContent=e,document.head.appendChild(t)}function removeStyles(){const e=document.querySelector("style[data-xref]");e&&e.remove()}function setupPrefetching(e){document.addEventListener(e.event,t=>{const n=t.target,o=n.closest("a");o&&isInternalLink(o)&&setTimeout(()=>prefetchPage(o.href),e.delay)})}function isInternalLink(e){return e.href.startsWith(window.location.origin)}async function prefetchPage(e){try{const t=await fetch(e,{method:"GET"}),n=await t.text(),o=new DOMParser;o.parseFromString(n,"text/html"),console.log(`Prefetched: ${e}`)}catch(t){console.error(`Failed to prefetch ${e}:`,t)}}function xref(e={}){var t;if(!xref.isSupported)return void console.warn("View Transitions API is not supported in this browser. Xref will not apply transitions.");const n=Object.assign(Object.assign({},xref.defaultOptions),e);setupViewTransitions(),(null===(t=n.prefetch)||void 0===t?void 0:t.isActive)&&setupPrefetching(n.prefetch),handleBrowserNavigation()}function handleBrowserNavigation(){window.addEventListener("popstate",()=>{const e=window.location.href;xref.navigateTo(e,!0)})}const defaultOptions={swapHtml:"body",prefetch:{isActive:!1,event:"mouseover",delay:0},transition:{duration:300,delay:0,easing:"ease",timeline:"sequential"}};xref.navigateTo=((e,t=!1)=>{t||history.pushState(null,"",e);const n=document.startViewTransition;"function"==typeof n?n(()=>fetch(e).then(e=>e.text()).then(e=>{const t=new DOMParser,n=t.parseFromString(e,"text/html");document.head.innerHTML=n.head.innerHTML;const o=document.querySelector(xref.defaultOptions.swapHtml||"body"),i=n.querySelector(xref.defaultOptions.swapHtml||"body");o&&i&&(o.innerHTML=i.innerHTML),window.scrollTo(0,0)})):window.location.href=e}),xref.version="0.0.1",xref.defaultOptions=defaultOptions,xref.isSupported="undefined"!=typeof document&&"startViewTransition"in document,xref.animate=animate;export{xref as default};